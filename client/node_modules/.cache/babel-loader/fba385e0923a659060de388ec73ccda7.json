{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaqu\\\\OneDrive\\\\Documents\\\\Week Eleven\\\\MAIN_PROJECT\\\\client\\\\src\\\\Question.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Questionnaire } from './components';\n\nfunction Question() {\n  const [questions, setQuestion] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false);\n  useEffect(() => {\n    getAPI();\n    console.log(\"Page Loaded\");\n  }, []);\n\n  const getAPI = async () => {\n    const res = await axios.get('https://opentdb.com/api.php?amount=10&category=18&difficulty=hard&type=multiple');\n    console.log(res.data); //res.data.value\n\n    setQuestion(res.data.results);\n  };\n\n  const handleAnswer = answer => {\n    const newIndex = currentIndex + 1;\n    setCurrentIndex(newIndex);\n\n    if (answer === questions[currentIndex].correct_answer) {\n      setScore(score + 1);\n    }\n\n    if (newIndex >= questions.length) {\n      setGameEnded(true);\n    }\n  };\n\n  return gameEnded ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, \"Your Score was \", score) : questions.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Questionnaire, {\n    data: questions[currentIndex],\n    handleAnswer: handleAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Your Question Loading\");\n}\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/shaqu/OneDrive/Documents/Week Eleven/MAIN_PROJECT/client/src/Question.js"],"names":["React","useState","useEffect","axios","Questionnaire","Question","questions","setQuestion","currentIndex","setCurrentIndex","score","setScore","gameEnded","setGameEnded","getAPI","console","log","res","get","data","results","handleAnswer","answer","newIndex","correct_answer","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,cAA5B;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BN,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfY,IAAAA,MAAM;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMF,MAAM,GAAG,YAAW;AACxB,UAAMG,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,iFAAV,CAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACE,IAAhB,EAFwB,CAEA;;AAExBZ,IAAAA,WAAW,CAACU,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAX;AAED,GAND;;AAQA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC7B,UAAMC,QAAQ,GAAGf,YAAY,GAAE,CAA/B;AACFC,IAAAA,eAAe,CAACc,QAAD,CAAf;;AAEA,QAAGD,MAAM,KAAKhB,SAAS,CAACE,YAAD,CAAT,CAAwBgB,cAAtC,EAAsD;AAClDb,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,QAAGa,QAAQ,IAAIjB,SAAS,CAACmB,MAAzB,EAAiC;AAC7BZ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACF,GAXD;;AAaA,SAAOD,SAAS,gBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoBF,KAApB,CADgB,GAIdJ,SAAS,CAACmB,MAAV,GAAmB,CAAnB,gBACA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AACI,IAAA,IAAI,EAAEnB,SAAS,CAACE,YAAD,CADnB;AAEI,IAAA,YAAY,EAAGa,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,gBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAXJ;AAcD;;AAED,eAAehB,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport {Questionnaire} from './components';\r\n\r\nfunction Question() {\r\n  const [questions, setQuestion] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameEnded, setGameEnded] = useState(false);\r\n\r\n  useEffect( () => {\r\n    getAPI();\r\n    console.log(\"Page Loaded\");\r\n  }, [])\r\n\r\n  const getAPI = async() => {\r\n    const res = await axios.get('https://opentdb.com/api.php?amount=10&category=18&difficulty=hard&type=multiple')\r\n    console.log(res.data);  //res.data.value\r\n\r\n    setQuestion(res.data.results);\r\n    \r\n  }\r\n\r\n  const handleAnswer = (answer) => {\r\n      const newIndex = currentIndex +1\r\n    setCurrentIndex(newIndex);\r\n\r\n    if(answer === questions[currentIndex].correct_answer) {\r\n        setScore(score + 1);\r\n    }\r\n\r\n    if(newIndex >= questions.length) {\r\n        setGameEnded(true);\r\n    }\r\n  };\r\n\r\n  return gameEnded ? (\r\n  <h1>Your Score was {score}</h1>\r\n      \r\n   ) : (\r\n    questions.length > 0 ? (\r\n    <div className='question_container'>\r\n        <Questionnaire \r\n            data={questions[currentIndex]} \r\n            handleAnswer= {handleAnswer} />   \r\n    </div>\r\n  ): (\r\n      <h1>Your Question Loading</h1>\r\n  ));\r\n    \r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}